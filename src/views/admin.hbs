<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Usuarios</title>
    <!-- Agrega los enlaces a los estilos de Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Agrega SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <!-- Agrega FontAwesome para los íconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body{
            background-color: #c3c3c7;
        }
        .user-table th,
        .user-table td {
            border: 1px solid #dee2e6;
            padding: 8px;
        }

        .user-table th {
            background-color: #f8f9fa;
            font-weight: bold;
            text-align: center;
        }

        .user-table tbody tr:nth-of-type(odd) {
            background-color: #606061; /* Fondo más oscuro */
        }
    </style>
</head>
<body class="container">
   
<h1 class="display-4">Panel de Administrador</h1>
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/realtimeproducts">Ir a Carga de productos</a>
            </li>

            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/chat">Ir al Chat</a>
            </li>
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/cart">Ir al carrito</a>
            </li>
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/products">Ir a Products</a>
            </li>
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/apidocs">Documentacion</a>
            </li>
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/mockingproducts">MockingProducts</a>
            </li>
            <li class="page-item mt-3 mr-2 ml-2">
                <a class="btn btn-primary" href="/loggerTest">loggerTest</a>
            </li>


        </ul>
    </nav>
    <div class="container">
        <h1>Lista de Usuarios</h1>
        <button class="btn btn-danger mb-3" id="borrar-inactivos-btn" onclick="borrarUsuariosInactivos()">Borrar Usuarios Inactivos</button>
        <table class="table user-table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Correo</th>
                    <th scope="col">Edad</th>
                    <th scope="col">Rol</th>
                    <th scope="col">Última Conexión</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each users}}
                <tr class="user-row">
                    <th scope="row">{{@index}}</th>
                    <td>{{this.email}}</td>
                    <td>{{this.age}}</td>
                    <td><strong>{{this.role}}</strong></td>
                    <td>
                        <!-- Ícono de información para la fecha -->
                        <button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="{{this.last_connection}}">
                            <i class="fas fa-info-circle"></i>
                        </button>
                    </td>
                   

                    <td>
                         
                        <button class="btn btn-warning user-role-button btn-block" data-user-email="{{this.email}}">Cambiar Rol</button>
                        <button class="btn btn-danger user-delete-button btn-block" data-user-email="{{this.email}}">Borrar Usuario</button>
                        {{#if this.documents.length}}
                        <button class="btn btn-primary user-docs-button btn-block" type="button" data-toggle="collapse" data-target="#user-docs-{{@index}}" aria-expanded="false" aria-controls="user-docs-{{@index}}">
                            Documentos
                        </button>
                        <div class="collapse" id="user-docs-{{@index}}">
                            <ul>
                                {{#each this.documents}}
                                <li>{{this.name}}</li>
                                {{/each}}
                            </ul>
                        </div>
                        {{/if}}
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    
    </div>
    <!-- Agrega los scripts de Bootstrap al final del documento -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Agrega FontAwesome para los íconos -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
    <script>
 // Secuencia de teclas dese



        // Inicializar tooltips de Bootstrap
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Agregar evento para el botón de borrar usuario
        $('.user-delete-button').on('click', function () {
            const userEmail = $(this).data('user-email');
            // Mostrar el mensaje de confirmación
            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminarlo'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        // Realizar la solicitud de eliminación si se confirma
                        const response = await fetch(`/api/admin/${userEmail}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        });
                        if (response.ok) {
                            // Si la eliminación fue exitosa, mostrar un mensaje de éxito
                            Swal.fire(
                                '¡Eliminado!',
                                'El usuario ha sido eliminado.',
                                'success'
                            ).then(() => {
                                // Recargar la página para reflejar los cambios
                                window.location.reload();
                            });
                        } else {
                            // Si hay un error en la eliminación, mostrar un mensaje de error
                            Swal.fire(
                                'Error',
                                'No se pudo eliminar el usuario.',
                                'error'
                            );
                        }
                    } catch (error) {
                        // Si hay un error en la solicitud, mostrar un mensaje de error
                        Swal.fire(
                            'Error',
                            'No se pudo eliminar el usuario.',
                            'error'
                        );
                    }
                }
            });
        });
        //Cambiar roll de usuario
        $('.user-role-button').on('click', function () {
    const userEmail = $(this).data('user-email');
    // Mostrar el mensaje de confirmación
    Swal.fire({
        title: '¿Estás seguro?',
        text: "¡No podrás revertir esto!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, cambiar rol'
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                // Realizar la solicitud para cambiar el rol si se confirma
                const response = await fetch(`/api/admin/${userEmail}`, {
                    method: 'POST', // Utiliza el método POST para cambiar el rol
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });
                if (response.ok) {
                    // Si la operación fue exitosa, mostrar un mensaje de éxito
                    Swal.fire(
                        '¡Rol Cambiado!',
                        'El rol del usuario ha sido cambiado.',
                        'success'
                    ).then(() => {
                        // Recargar la página para reflejar los cambios
                        window.location.reload();
                    });
                } else {
                    // Si hay un error, mostrar un mensaje de error
                    Swal.fire(
                        'Error',
                        'No se pudo cambiar el rol del usuario.',
                        'error'
                    );
                }
            } catch (error) {
                // Si hay un error en la solicitud, mostrar un mensaje de error
                Swal.fire(
                    'Error',
                    'No se pudo cambiar el rol del usuario.',
                    'error'
                );
            }
        }
    });
});





        //borrar usuarios inactivos 
        function borrarUsuariosInactivos() {
    // Mostrar el mensaje de confirmación
    Swal.fire({
        title: '¿Estás seguro?',
        text: "¡No podrás revertir esto!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, eliminar inactivos'
    }).then(async (result) => {
        if (result.isConfirmed) {
            // Mostrar el modal de carga
            Swal.fire({
                title: 'Cargando...',
                text: 'Por favor, espera mientras se eliminan los usuarios inactivos.',
                showConfirmButton: false,
                allowOutsideClick: false,
                onBeforeOpen: () => {
                    Swal.showLoading();
                }
            });

            try {
                // Realizar la solicitud DELETE para eliminar usuarios inactivos
                const response = await fetch('/api/admin/inactive', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                // Ocultar el modal de carga
                Swal.close();

                if (response.ok) {
                    // Si la eliminación fue exitosa, mostrar un mensaje de éxito
                    Swal.fire(
                        '¡Eliminados!',
                        'Los usuarios inactivos han sido eliminados.',
                        'success'
                    ).then(() => {
                        // Recargar la página para reflejar los cambios
                        window.location.reload();
                    });
                } else {
                    // Si hay un error en la eliminación, mostrar un mensaje de error
                    Swal.fire(
                        'Error',
                        'No se pudieron eliminar los usuarios inactivos.',
                        'error'
                    );
                }
            } catch (error) {
                // Si hay un error en la solicitud, mostrar un mensaje de error
                Swal.fire(
                    'Error',
                    'No se pudieron eliminar los usuarios inactivos.',
                    'error'
                );
            }
        }
    });
}

    </script>
</body>
</html>
